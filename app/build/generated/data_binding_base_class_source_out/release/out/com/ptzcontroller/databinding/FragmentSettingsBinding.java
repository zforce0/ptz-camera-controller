// Generated by view binder compiler. Do not edit!
package com.ptzcontroller.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ptzcontroller.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final RadioGroup radioGroupStreamQuality;

  @NonNull
  public final RadioButton radioHighQuality;

  @NonNull
  public final RadioButton radioLowQuality;

  @NonNull
  public final RadioButton radioMediumQuality;

  @NonNull
  public final SeekBar seekbarControlSensitivity;

  @NonNull
  public final SeekBar seekbarZoomSensitivity;

  @NonNull
  public final Switch switchDarkMode;

  @NonNull
  public final Switch switchHideControls;

  @NonNull
  public final Switch switchKeepScreenOn;

  @NonNull
  public final TextView textAppVersion;

  @NonNull
  public final TextView textControlSensitivityValue;

  @NonNull
  public final TextView textZoomSensitivityValue;

  private FragmentSettingsBinding(@NonNull ScrollView rootView,
      @NonNull RadioGroup radioGroupStreamQuality, @NonNull RadioButton radioHighQuality,
      @NonNull RadioButton radioLowQuality, @NonNull RadioButton radioMediumQuality,
      @NonNull SeekBar seekbarControlSensitivity, @NonNull SeekBar seekbarZoomSensitivity,
      @NonNull Switch switchDarkMode, @NonNull Switch switchHideControls,
      @NonNull Switch switchKeepScreenOn, @NonNull TextView textAppVersion,
      @NonNull TextView textControlSensitivityValue, @NonNull TextView textZoomSensitivityValue) {
    this.rootView = rootView;
    this.radioGroupStreamQuality = radioGroupStreamQuality;
    this.radioHighQuality = radioHighQuality;
    this.radioLowQuality = radioLowQuality;
    this.radioMediumQuality = radioMediumQuality;
    this.seekbarControlSensitivity = seekbarControlSensitivity;
    this.seekbarZoomSensitivity = seekbarZoomSensitivity;
    this.switchDarkMode = switchDarkMode;
    this.switchHideControls = switchHideControls;
    this.switchKeepScreenOn = switchKeepScreenOn;
    this.textAppVersion = textAppVersion;
    this.textControlSensitivityValue = textControlSensitivityValue;
    this.textZoomSensitivityValue = textZoomSensitivityValue;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.radioGroupStreamQuality;
      RadioGroup radioGroupStreamQuality = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupStreamQuality == null) {
        break missingId;
      }

      id = R.id.radioHighQuality;
      RadioButton radioHighQuality = ViewBindings.findChildViewById(rootView, id);
      if (radioHighQuality == null) {
        break missingId;
      }

      id = R.id.radioLowQuality;
      RadioButton radioLowQuality = ViewBindings.findChildViewById(rootView, id);
      if (radioLowQuality == null) {
        break missingId;
      }

      id = R.id.radioMediumQuality;
      RadioButton radioMediumQuality = ViewBindings.findChildViewById(rootView, id);
      if (radioMediumQuality == null) {
        break missingId;
      }

      id = R.id.seekbarControlSensitivity;
      SeekBar seekbarControlSensitivity = ViewBindings.findChildViewById(rootView, id);
      if (seekbarControlSensitivity == null) {
        break missingId;
      }

      id = R.id.seekbarZoomSensitivity;
      SeekBar seekbarZoomSensitivity = ViewBindings.findChildViewById(rootView, id);
      if (seekbarZoomSensitivity == null) {
        break missingId;
      }

      id = R.id.switchDarkMode;
      Switch switchDarkMode = ViewBindings.findChildViewById(rootView, id);
      if (switchDarkMode == null) {
        break missingId;
      }

      id = R.id.switchHideControls;
      Switch switchHideControls = ViewBindings.findChildViewById(rootView, id);
      if (switchHideControls == null) {
        break missingId;
      }

      id = R.id.switchKeepScreenOn;
      Switch switchKeepScreenOn = ViewBindings.findChildViewById(rootView, id);
      if (switchKeepScreenOn == null) {
        break missingId;
      }

      id = R.id.textAppVersion;
      TextView textAppVersion = ViewBindings.findChildViewById(rootView, id);
      if (textAppVersion == null) {
        break missingId;
      }

      id = R.id.textControlSensitivityValue;
      TextView textControlSensitivityValue = ViewBindings.findChildViewById(rootView, id);
      if (textControlSensitivityValue == null) {
        break missingId;
      }

      id = R.id.textZoomSensitivityValue;
      TextView textZoomSensitivityValue = ViewBindings.findChildViewById(rootView, id);
      if (textZoomSensitivityValue == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ScrollView) rootView, radioGroupStreamQuality,
          radioHighQuality, radioLowQuality, radioMediumQuality, seekbarControlSensitivity,
          seekbarZoomSensitivity, switchDarkMode, switchHideControls, switchKeepScreenOn,
          textAppVersion, textControlSensitivityValue, textZoomSensitivityValue);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
