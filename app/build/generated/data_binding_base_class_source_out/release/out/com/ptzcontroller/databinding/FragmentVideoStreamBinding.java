// Generated by view binder compiler. Do not edit!
package com.ptzcontroller.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.exoplayer2.ui.PlayerView;
import com.ptzcontroller.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVideoStreamBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnReconnect;

  @NonNull
  public final Button btnRecord;

  @NonNull
  public final Button btnSnapshot;

  @NonNull
  public final ConstraintLayout controlsLayout;

  @NonNull
  public final ProgressBar progressLoading;

  @NonNull
  public final ConstraintLayout statusOverlay;

  @NonNull
  public final TextView tvStreamQuality;

  @NonNull
  public final TextView tvStreamQualityLabel;

  @NonNull
  public final TextView tvStreamResolution;

  @NonNull
  public final TextView tvStreamStatus;

  @NonNull
  public final TextView tvStreamStatusLabel;

  @NonNull
  public final PlayerView videoView;

  private FragmentVideoStreamBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnReconnect, @NonNull Button btnRecord, @NonNull Button btnSnapshot,
      @NonNull ConstraintLayout controlsLayout, @NonNull ProgressBar progressLoading,
      @NonNull ConstraintLayout statusOverlay, @NonNull TextView tvStreamQuality,
      @NonNull TextView tvStreamQualityLabel, @NonNull TextView tvStreamResolution,
      @NonNull TextView tvStreamStatus, @NonNull TextView tvStreamStatusLabel,
      @NonNull PlayerView videoView) {
    this.rootView = rootView;
    this.btnReconnect = btnReconnect;
    this.btnRecord = btnRecord;
    this.btnSnapshot = btnSnapshot;
    this.controlsLayout = controlsLayout;
    this.progressLoading = progressLoading;
    this.statusOverlay = statusOverlay;
    this.tvStreamQuality = tvStreamQuality;
    this.tvStreamQualityLabel = tvStreamQualityLabel;
    this.tvStreamResolution = tvStreamResolution;
    this.tvStreamStatus = tvStreamStatus;
    this.tvStreamStatusLabel = tvStreamStatusLabel;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVideoStreamBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVideoStreamBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_video_stream, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVideoStreamBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_reconnect;
      Button btnReconnect = ViewBindings.findChildViewById(rootView, id);
      if (btnReconnect == null) {
        break missingId;
      }

      id = R.id.btn_record;
      Button btnRecord = ViewBindings.findChildViewById(rootView, id);
      if (btnRecord == null) {
        break missingId;
      }

      id = R.id.btn_snapshot;
      Button btnSnapshot = ViewBindings.findChildViewById(rootView, id);
      if (btnSnapshot == null) {
        break missingId;
      }

      id = R.id.controls_layout;
      ConstraintLayout controlsLayout = ViewBindings.findChildViewById(rootView, id);
      if (controlsLayout == null) {
        break missingId;
      }

      id = R.id.progress_loading;
      ProgressBar progressLoading = ViewBindings.findChildViewById(rootView, id);
      if (progressLoading == null) {
        break missingId;
      }

      id = R.id.status_overlay;
      ConstraintLayout statusOverlay = ViewBindings.findChildViewById(rootView, id);
      if (statusOverlay == null) {
        break missingId;
      }

      id = R.id.tv_stream_quality;
      TextView tvStreamQuality = ViewBindings.findChildViewById(rootView, id);
      if (tvStreamQuality == null) {
        break missingId;
      }

      id = R.id.tv_stream_quality_label;
      TextView tvStreamQualityLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvStreamQualityLabel == null) {
        break missingId;
      }

      id = R.id.tv_stream_resolution;
      TextView tvStreamResolution = ViewBindings.findChildViewById(rootView, id);
      if (tvStreamResolution == null) {
        break missingId;
      }

      id = R.id.tv_stream_status;
      TextView tvStreamStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStreamStatus == null) {
        break missingId;
      }

      id = R.id.tv_stream_status_label;
      TextView tvStreamStatusLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvStreamStatusLabel == null) {
        break missingId;
      }

      id = R.id.video_view;
      PlayerView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new FragmentVideoStreamBinding((ConstraintLayout) rootView, btnReconnect, btnRecord,
          btnSnapshot, controlsLayout, progressLoading, statusOverlay, tvStreamQuality,
          tvStreamQualityLabel, tvStreamResolution, tvStreamStatus, tvStreamStatusLabel, videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
