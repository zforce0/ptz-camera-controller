// Generated by view binder compiler. Do not edit!
package com.ptzcontroller.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.ptzcontroller.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentConnectionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView bluetoothLabel;

  @NonNull
  public final Button btnEnableBluetooth;

  @NonNull
  public final Button btnScanDevices;

  @NonNull
  public final Button btnWifiConnect;

  @NonNull
  public final RecyclerView detectedDevicesList;

  @NonNull
  public final View divider;

  @NonNull
  public final TextInputEditText ipAddressInput;

  @NonNull
  public final TextInputLayout ipAddressLayout;

  @NonNull
  public final RecyclerView pairedDevicesList;

  @NonNull
  public final TextInputEditText portInput;

  @NonNull
  public final TextInputLayout portLayout;

  @NonNull
  public final ProgressBar scanningProgress;

  @NonNull
  public final TextView tvDetectedDevicesLabel;

  @NonNull
  public final TextView tvNoBluetoothDevices;

  @NonNull
  public final TextView tvPairedDevicesLabel;

  @NonNull
  public final TextView wifiLabel;

  private FragmentConnectionBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView bluetoothLabel, @NonNull Button btnEnableBluetooth,
      @NonNull Button btnScanDevices, @NonNull Button btnWifiConnect,
      @NonNull RecyclerView detectedDevicesList, @NonNull View divider,
      @NonNull TextInputEditText ipAddressInput, @NonNull TextInputLayout ipAddressLayout,
      @NonNull RecyclerView pairedDevicesList, @NonNull TextInputEditText portInput,
      @NonNull TextInputLayout portLayout, @NonNull ProgressBar scanningProgress,
      @NonNull TextView tvDetectedDevicesLabel, @NonNull TextView tvNoBluetoothDevices,
      @NonNull TextView tvPairedDevicesLabel, @NonNull TextView wifiLabel) {
    this.rootView = rootView;
    this.bluetoothLabel = bluetoothLabel;
    this.btnEnableBluetooth = btnEnableBluetooth;
    this.btnScanDevices = btnScanDevices;
    this.btnWifiConnect = btnWifiConnect;
    this.detectedDevicesList = detectedDevicesList;
    this.divider = divider;
    this.ipAddressInput = ipAddressInput;
    this.ipAddressLayout = ipAddressLayout;
    this.pairedDevicesList = pairedDevicesList;
    this.portInput = portInput;
    this.portLayout = portLayout;
    this.scanningProgress = scanningProgress;
    this.tvDetectedDevicesLabel = tvDetectedDevicesLabel;
    this.tvNoBluetoothDevices = tvNoBluetoothDevices;
    this.tvPairedDevicesLabel = tvPairedDevicesLabel;
    this.wifiLabel = wifiLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentConnectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentConnectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_connection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentConnectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bluetoothLabel;
      TextView bluetoothLabel = ViewBindings.findChildViewById(rootView, id);
      if (bluetoothLabel == null) {
        break missingId;
      }

      id = R.id.btnEnableBluetooth;
      Button btnEnableBluetooth = ViewBindings.findChildViewById(rootView, id);
      if (btnEnableBluetooth == null) {
        break missingId;
      }

      id = R.id.btnScanDevices;
      Button btnScanDevices = ViewBindings.findChildViewById(rootView, id);
      if (btnScanDevices == null) {
        break missingId;
      }

      id = R.id.btnWifiConnect;
      Button btnWifiConnect = ViewBindings.findChildViewById(rootView, id);
      if (btnWifiConnect == null) {
        break missingId;
      }

      id = R.id.detectedDevicesList;
      RecyclerView detectedDevicesList = ViewBindings.findChildViewById(rootView, id);
      if (detectedDevicesList == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.ipAddressInput;
      TextInputEditText ipAddressInput = ViewBindings.findChildViewById(rootView, id);
      if (ipAddressInput == null) {
        break missingId;
      }

      id = R.id.ipAddressLayout;
      TextInputLayout ipAddressLayout = ViewBindings.findChildViewById(rootView, id);
      if (ipAddressLayout == null) {
        break missingId;
      }

      id = R.id.pairedDevicesList;
      RecyclerView pairedDevicesList = ViewBindings.findChildViewById(rootView, id);
      if (pairedDevicesList == null) {
        break missingId;
      }

      id = R.id.portInput;
      TextInputEditText portInput = ViewBindings.findChildViewById(rootView, id);
      if (portInput == null) {
        break missingId;
      }

      id = R.id.portLayout;
      TextInputLayout portLayout = ViewBindings.findChildViewById(rootView, id);
      if (portLayout == null) {
        break missingId;
      }

      id = R.id.scanningProgress;
      ProgressBar scanningProgress = ViewBindings.findChildViewById(rootView, id);
      if (scanningProgress == null) {
        break missingId;
      }

      id = R.id.tvDetectedDevicesLabel;
      TextView tvDetectedDevicesLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvDetectedDevicesLabel == null) {
        break missingId;
      }

      id = R.id.tvNoBluetoothDevices;
      TextView tvNoBluetoothDevices = ViewBindings.findChildViewById(rootView, id);
      if (tvNoBluetoothDevices == null) {
        break missingId;
      }

      id = R.id.tvPairedDevicesLabel;
      TextView tvPairedDevicesLabel = ViewBindings.findChildViewById(rootView, id);
      if (tvPairedDevicesLabel == null) {
        break missingId;
      }

      id = R.id.wifiLabel;
      TextView wifiLabel = ViewBindings.findChildViewById(rootView, id);
      if (wifiLabel == null) {
        break missingId;
      }

      return new FragmentConnectionBinding((ConstraintLayout) rootView, bluetoothLabel,
          btnEnableBluetooth, btnScanDevices, btnWifiConnect, detectedDevicesList, divider,
          ipAddressInput, ipAddressLayout, pairedDevicesList, portInput, portLayout,
          scanningProgress, tvDetectedDevicesLabel, tvNoBluetoothDevices, tvPairedDevicesLabel,
          wifiLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
